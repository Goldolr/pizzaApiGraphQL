"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
@scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    pizzas: [Pizza!]! @all
    pizza(id: ID! @eq): Pizza @find

    ingredients: [Ingredient!]! @all
    ingredient(id: ID! @eq): Ingredient @find
}

type Pizza {
    id: ID!
    name: String
    origin: String
    ingredients: [Ingredient!] @hasMany
}

type Ingredient {
    id: ID!
    name: String
    calories: String
    pizzas: Pizza @belongsTo
}

input CreatePizzaInput {
    name: String!
    origin: String!
    ingredients: CreateIngredientsRelation!
}

input CreateIngredientInput {
    name: String!
    calories: String!
}

input CreateIngredientsRelation {
    create: [CreateIngredientInput!]
    connect: [ID!]
}

input CreateIngredientInput {
    name: String!
    calories: String!
}
input UpdatePizzaInput {
    id: ID!
    name: String
    origin: String
    ingredients: UpdateIngredientsRelation
}

input UpdateIngredientsRelation {
    create: [CreateIngredientInput!]
    update: [UpdateIngredientInput!]
    delete: [ID!]
}

input UpdateIngredientInput {
    id:ID!
    name: String
    calories: String
}

type Mutation {
    createPizza(input: CreatePizzaInput! @spread): Pizza @create
    createIngredient(input: CreateIngredientInput! @spread): Ingredient @create

    updatePizza(input: UpdatePizzaInput! @spread): Pizza @update
    updateIngredient(input: UpdateIngredientInput! @spread): Ingredient
    @update

    deletePizza(id: ID! @rules(apply: ["required"])): Pizza @delete
    deleteIngredient(id: ID! @rules(apply: ["required"])): Ingredient @delete
}
